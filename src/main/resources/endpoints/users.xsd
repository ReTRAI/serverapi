<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.mob.com/serverapi/users/base"
           targetNamespace="http://www.mob.com/serverapi/users/base" elementFormDefault="qualified">

    <!-- getUserById-->
    <xs:element name="getUserByIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId"  type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getUserByIdResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:user"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- getUserRolesByUserId-->
    <xs:element name="getUserRolesByUserIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId"  type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getUserRolesByUserIdResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userRole" type="tns:userRole" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- getUserFiltered-->
    <xs:element name="getUserFilteredRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId"  type="xs:string" />
                <xs:element name="userName"  type="xs:string" />
                <xs:element name="userStatus"  type="xs:string" />
                <xs:element name="userEmail"  type="xs:string" />
                <xs:element name="startCreationDate"  type="xs:string" />
                <xs:element name="endCreationDate"  type="xs:string" />
                <xs:element name="field"  type="xs:string" />
                <xs:element name="orderField"  type="xs:string" />
                <xs:element name="offset"  type="xs:int"/>
                <xs:element name="numberRecords"  type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getUserFilteredResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:user" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- getCountUserFiltered-->
    <xs:element name="getCountUserFilteredRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId"  type="xs:string" />
                <xs:element name="userName"  type="xs:string" />
                <xs:element name="userStatus"  type="xs:string" />
                <xs:element name="userEmail"  type="xs:string" />
                <xs:element name="startCreationDate"  type="xs:string" />
                <xs:element name="endCreationDate"  type="xs:string" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getCountUserFilteredResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:long"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- userLogin-->
    <xs:element name="userLoginRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userEmail" type="xs:string"/>
                <xs:element name="userPassword" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="userLoginResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:user"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- setUser-->
    <xs:element name="setUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userName" type="xs:string"/>
                <xs:element name="userEmail" type="xs:string"/>
                <xs:element name="userPassword" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="setUserResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:user"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- unblockUser-->
    <xs:element name="unblockUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>

            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="unblockUserResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- changeUserPw-->
    <xs:element name="changeUserPwRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string"/>
                <xs:element name="password" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>

            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="changeUserPwResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- inactivateUser-->
    <xs:element name="inactivateUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>

            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="inactivateUserResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- changeLangPreference-->
    <xs:element name="changeLangPreferenceRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string"/>
                <xs:element name="lang" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>

            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="changeLangPreferenceResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- changeThemePreference-->
    <xs:element name="changeThemePreferenceRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string"/>
                <xs:element name="theme" type="xs:string"/>
                <xs:element name="actionUserId"  type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="changeThemePreferenceResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- existUserName-->
    <xs:element name="existUserNameRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userName" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="existUserNameResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- existUserEmail-->
    <xs:element name="existUserEmailRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userEmail" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="existUserEmailResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Endpoint User Object-->
    <xs:complexType name="user">
        <xs:sequence>
            <xs:element name="userId"  type="xs:string"/>
            <xs:element name="userName" type="xs:string"/>
            <xs:element name="userEmail" type="xs:string"/>
            <xs:element name="userStatus" type="xs:string"/>
            <xs:element name="languagePreference" type="xs:string"/>
            <xs:element name="themePreference" type="xs:string"/>
            <xs:element name="creationDate" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Endpoint UserRole Object-->
    <xs:complexType name="userRole">
        <xs:sequence>
            <xs:element name="userRoleId"  type="xs:string"/>
            <xs:element name="userRoleName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>